{"version":3,"file":"static/js/269.6bc78dc6.chunk.js","mappings":"6KACA,EAA2B,gC,SCa3B,EAXsB,WACpB,OACE,iBAAKA,UAAWC,EAAhB,WACE,6CACA,SAAC,KAAD,CAAMD,UAAU,MAAME,GAAK,aAA3B,8B,0ECNN,EAAuB,wB,kBCkBvB,EAhBkB,SAACC,GACjB,OACE,gBAAIH,UAAWC,EAAf,WACE,+BACE,iCACE,uBAAIE,EAAMC,UAEZ,gCAAaD,EAAME,aAErB,SAAC,KAAD,CAAMH,GAAE,iBAAaC,EAAMG,IAAKN,UAAU,MAA1C,iCCXN,EAAuB,wBAAvB,EAAyD,2BCmDzD,EArCkB,SAACG,GACjB,IAXkBI,EAAQC,EAWpBC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAIXC,EAA+C,QAFjC,IAAIC,gBAAgBH,EAASI,QAEXC,IAAI,QAEpCC,GAlBYV,EAkBaJ,EAAMI,OAlBXC,EAkBkBK,EAjBrCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOb,GAAKc,EAAOd,GAAK,GAAK,EAE7Ba,EAAOb,GAAKc,EAAOd,GAAK,GAAK,MAuBxC,OACE,UAAC,EAAAe,SAAD,YACE,gBAAKrB,UAAWC,EAAhB,UACE,oBAAQqB,QAXa,WAMzBb,EAAQc,KAAR,UAAgBZ,EAASa,SAAzB,iBAA2CX,EAAoB,OAAQ,SAKnE,kBAA6CA,EAAoB,aAAe,kBAElF,eAAIb,UAAWC,EAAf,SACGgB,EAAaQ,KAAI,SAACC,GAAD,OAChB,SAAC,EAAD,CAEEpB,GAAIoB,EAAMpB,GACVD,OAAQqB,EAAMrB,OACdD,KAAMsB,EAAMtB,MAHPsB,EAAMpB,c,8FCPvB,UA3BkB,WACd,OAAwDqB,EAAAA,EAAAA,GAAQC,EAAAA,IAAc,GAAvEC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OAAcC,EAAlC,EAA4BC,KAAoBC,EAAhD,EAAgDA,MAMhD,OAJAC,EAAAA,EAAAA,YAAU,WACNL,MACD,CAACA,IAEQ,YAATC,GACQ,gBAAK9B,UAAU,WAAf,UACH,SAAC,IAAD,MAILiC,GACS,cAAGjC,UAAU,mBAAb,SAAiCiC,IAGjC,cAATH,GAA0BC,GAAwC,IAAxBA,EAAaI,QAMnD,SAAC,IAAD,CAAW5B,OAAQwB,KALf,SAAC,IAAD","sources":["webpack://react-complete-guide/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","webpack://react-complete-guide/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-complete-guide/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","pages/AllQuotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__C6jVa\"};","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to = '/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__cJRaG\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to= {`quotes/${props.id}`}className='btn'>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__YhMZf\",\"sorting\":\"QuoteList_sorting__ojiEf\"};","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending= queryParams.get('sort')=== 'asc';\n\n  const sortedQuotes= sortQuotes(props.quotes,isSortingAscending )\n\n  const changeSortingHandler=()=>{\n    // history.push({\n    //   pathname: location.pathname,\n    //   search: `?sort=${(isSortingAscending? 'desc': 'asc')}`\n    // });\n\n    history.push(`${location.pathname}?sort=${(isSortingAscending? 'desc': 'asc')}`)\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending ?'Descending' : 'Ascending' }</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useEffect } from \"react\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n\r\nconst AllQuotes = ()=>{\r\n    const {sendRequest, status, data: loadedQuotes, error}= useHttp(getAllQuotes, true);\r\n   \r\n    useEffect(()=>{\r\n        sendRequest();\r\n    }, [sendRequest]);\r\n\r\n    if(status==='pending'){\r\n        return <div className=\"centered\">\r\n            <LoadingSpinner/>\r\n        </div>\r\n    }\r\n\r\n    if(error){\r\n        return  <p className=\"centered focused\">{error}</p>;\r\n    }\r\n\r\n    if(status==='completed' && (!loadedQuotes || loadedQuotes.length === 0)){\r\n        return <NoQuotesFound/>\r\n    \r\n    }\r\n    \r\n\r\n    return <QuoteList quotes={loadedQuotes}/>;\r\n    \r\n};\r\n\r\nexport default AllQuotes;"],"names":["className","classes","to","props","text","author","id","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","Fragment","onClick","push","pathname","map","quote","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","length"],"sourceRoot":""}