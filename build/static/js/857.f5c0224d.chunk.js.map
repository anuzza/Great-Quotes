{"version":3,"file":"static/js/857.f5c0224d.chunk.js","mappings":"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","sources":["webpack://react-complete-guide/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","webpack://react-complete-guide/./src/components/comments/Comments.module.css?d88e","webpack://react-complete-guide/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","webpack://react-complete-guide/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://react-complete-guide/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","components/comments/Comments.js","webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__C6jVa\"};","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to = '/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__Np0qE\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__sXvAs\",\"loading\":\"NewCommentForm_loading__56zKB\",\"control\":\"NewCommentForm_control__7mlly\",\"actions\":\"NewCommentForm_actions__cQl5r\"};","import { useRef, useEffect } from \"react\";\n\nimport classes from \"./NewCommentForm.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__xkDqz\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__hOAOA\"};","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__ZVh9R\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useEffect } from \"react\";\r\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\n\r\n\r\nconst QuoteDetail = ()=>{\r\n    const match = useRouteMatch();\r\n\r\n    const params = useParams();\r\n    const {sendRequest, status, data : loadedQuote, error}= useHttp(getSingleQuote, true);\r\n\r\n    const {quoteId}= params;\r\n\r\n    useEffect(()=>{\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId]);\r\n\r\n    if(status==='pending'){\r\n        return <div className=\"centered\">\r\n            <LoadingSpinner/>\r\n        </div>\r\n    }\r\n\r\n    if(error){\r\n        return <p className=\"centered\">\r\n        </p>\r\n    }\r\n\r\n    \r\n    if(!loadedQuote.text){\r\n        return <p>No quote found</p>\r\n\r\n    }\r\n\r\n    \r\n    return <section>\r\n        <HighlightedQuote text = {loadedQuote.text} author= {loadedQuote.author} />\r\n        <Route path = {match.path} exact>\r\n            <div className=\"centered\">\r\n            <Link className=\"btn--flat\" to = {`${match.url}/comments`}>Load Comments</Link>\r\n        </div>\r\n        </Route>\r\n        \r\n        <Route path = {`${match.path}/comments`}>\r\n            <Comments/>\r\n        </Route>\r\n        \r\n    </section>\r\n    \r\n}\r\n\r\nexport default QuoteDetail;"],"names":["className","classes","to","props","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","quoteId","onSubmit","LoadingSpinner","htmlFor","id","rows","ref","comments","map","comment","useState","isAddingComment","setIsAddingComment","params","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","author","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","url"],"sourceRoot":""}